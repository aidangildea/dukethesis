---
title: "Promoting Accessibility in Duke Data Visualization:"
subtitle: "Creating a Color-Blind Friendly Duke Color Package"
author: "Aidan Gildea<br>Dr. Mine Ã‡etinkaya-Rundel"
format: 
  revealjs:
    logo: "images/dukelogo.png"
    theme: [simple, style.scss]
    mainfont: Atkinson Hyperlegible
    embed-resources: true
    slide-number: true
bibliography: ../references.bib
---

```{r}
#| include: false

# set figure parameters for knitr
knitr::opts_chunk$set(
  fig.width = 7,        # 7" width
  fig.asp = 0.618,      # the golden ratio
  fig.retina = 3,       # dpi multiplier for displaying HTML output on retina
  fig.align = "center", # center align figures
  dpi = 300             # higher dpi, sharper image
)
```

::: v-center-container
> **"Accessible design is good design -- it benefits people who don't have disabilities as well as people who do. Accessibility is all about removing barriers and providing the benefits for everyone."**
>
> Steve Ballmer, former Microsoft CEO (2000-2014)
:::

# Introduction

## Motivation

<br><br>

Principal goals of thesis:

1.  identify a **material issue**, and
2.  address it with a **tangible solution**

## Motivation

-   Companies can highlight their brand via R packages i.e. **`ggtech`** (Airbnb, Facebook, Google), **`ggthemes`** (The Economist, The Wall Street Journal)
-   Duke has over 17,000 students, 38,000 employees, six campuses and spends more than \$1 annually in research expenditures
-   No existing R package to represent the Duke brand in data visualization

## Motivation

-   Data visualization industry expected to nearly double by 2026

-   Important questions to consider:

    -   Who is our audience?
    -   How can we make our visualizations more intelligible?
    -   Who might we be leaving behind?

-   To reach largest audience, Duke branding package must consider colorblind accessibility

## Goal {.center}

**Empower users to create Duke branded and color-blind friendly visualizations by constructing an R color package.**

## Background

---
nocite: |
  @woods2021b
  @aboutco
---

::: incremental
-   Formally known as Color Vision Deficiency (CVD)
-   Approximately 300 million color blind people across the globe
    -   1 in 12 men (8%) and 1 in 200 women (0.5%) are affected
-   Red-green color blindness accounts for approximately 99% of the population with CVD
    -   62.5% are deuteronamolous (green-weak vision), 12.5% have protonopia and deuteranopia (cannot distinguish between red and green)
:::

## Perspective Comparison

::: columns
::: {.column width="50%"}
![Non-deuteronamolous perspective](images/balloons.png){alt="Non-deuteronamolous perspective"}
:::

::: {.column width="50%"}
![Deuteronamolous perspective](images/balloons2.png){alt="Deuteronamolous perspective"}
:::
:::

## Background

-   Duke provides resources on how their color suite meets the Web Content Accessibility Guidelines (WCAG)
    -   WCAG: globally recognized standard for web accessibility best practices in all fields
-   No pathway for users to integrate accessibility information into their visualizations
-   The **duke** package aims to fill this unique branding and accessibility need

# Methods

## Color Resources

-   Duke official color palette
    -   Intended to bolster the brand of the University and ensure cohesion among all official content

```{r}
#| include: false

library(tibble)
library(ggplot2)
library(dplyr)
library(stringr)

blues <- c("#00539B", "#012169")
blues_names <- c("Duke Royal Blue", "Duke Navy Blue")

blues_df <- tibble(
  x = 1:length(blues),
  y = rep(1, length(blues)),
  hex = blues,
  name = blues_names
) |>
  mutate(name = paste0(name, "\n", hex))

other_values <- c("#339898", "#C84E00", "#A1B70D", "#E89923",
                       "#993399", "#262626", "#988675", "#FFD960", "#1D6363", "#005587", "#0577B1", "#E2E6ED", "#F3F2F1", "#FCF7E5", "#DAD0C6", "#666666", "#B5B5B5", "#E5E5E5")
                       
final_colors <- tibble(
  x = 1:length(other_values),
  y = rep(1, length(other_values)),
)
```

-   2 primary colors

<center>

```{r}
#| warning: false
#| echo: false
#| fig-height: .1
#| fig-asp: .07
ggplot(blues_df, aes(x = x, y = y)) +
  geom_tile(aes(fill = blues)) +
  scale_fill_identity() +
  geom_text(aes(label = str_wrap(name, 5)), color = "white", fontface = "bold") +
  theme_void() +
  theme(plot.margin = unit(c(0, 0, 0, 0), "cm"))

```

</center>

-   18 secondary and tertiary colors

<center>

```{r}
#| echo: false
#| fig-height: .1
#| fig-asp: .07

ggplot(final_colors, aes(x = x, y = y)) +
  geom_tile(aes(fill = other_values)) +
  scale_fill_identity() +
  theme_void() +
  theme(plot.margin = unit(c(0, 0, 0, 0), "cm"))
```

</center>

## Accessibility Metrics

Accessibility guide ranks color pairing using following categories:

-   [AAA**:**]{style="color: grey;"} highest compliance, text-background contrast ratio of 7+
-   [AA**:**]{style="color: grey;"} mid-range compliance, text-background contrast ratio of 4.5+
-   [AA18**:**]{style="color: orange;"} mid-range compliance with large text only (18pt or 14pt bold), text-background contrast ratio of 3+
-   [DNP**:**]{style="color: red;"} does not pass compliance guidelines, text-background contrast ratio of less than 3

## Color Difference Metrics

-   Metrics using the standard RGB (sRGB) space can be flawed due to its perceptual uniformity
-   CIE chromaticity diagram exhibits the color spectrum according to human vision

![](images/chromaticity.jpg){fig-align="center" width="400"}

## Color Contrast Ratio

::: v-center-container
-   To account for this irregularity, we use the color contrast ratio: $$CCR = \frac{(L1 + 0.05)} {(L2 + 0.05)}$$
-   Ranges from a value of 1 (no contrast) to 21 (highest contrast)
:::

## Definition of Optimal Pallette

![](images/flow.png)

Ad-hoc approach in order to strike a balance between accessibility and recognition of the Duke brand.

# Package Development Process

## `theme_duke()`

-   Sets the aesthetic elements for the visualization's background and accessory features (background color, grid lines, axis ticks, plot text, etc.)
-   Minimalist design with a White background and grid lines removed
-   Text in Duke Navy Blue for strong contrast to the White background (CCR of 14.76)
-   Relative text sizing for consistent scale

## Font specification in `theme_duke()`

-   Font specification is **challenging**
-   Recommend the use of Atkinson Hyperlegible font
    -   "Focuses on letterform distinction to increase character recognition" [@staff]
-   Optimal solution would default to use of Atkinson Hyperlegible
    -   Stability across systems and **systemfonts** issues are prohibitive

## `theme_duke()`

```{r}
#| label: theme
#| warning: false
#| include: false

library(palmerpenguins)
library(duke)

scatterplot <- ggplot(
  penguins,
  aes(x = bill_length_mm, y = bill_depth_mm)
) +
  geom_point() +
  labs(
    title = "Bill Length vs. Bill Depth",
    x = "Bill Length (mm)", y = "Bill Depth (mm)"
  )
```

```{r}
#| label: fig-theme-duke
#| layout-ncol: 2
#| echo: true
#| fig-asp: 0.618
#| fig-align: "center"
#| fig-cap: "Plot comparison using theme function."
#| cap-location: bottom
#| fig-subcap:
#|   - "Original"
#|   - "with theme_duke()"
#| warning: false
#| code-line-numbers: "3-4"
scatterplot

scatterplot +
  theme_duke()
```

## `scale_duke_continuous()`

-   Applies a Duke-specific continuous color scale to geometric objects (geoms)
-   Scale sequences from a dark (Duke Royal Blue) to a light color (Hatteras)
    -   Duke Royal Blue and White: 7.75
    -   Hatteras and White: 1.25
-   Continuous color scales used for overall trend recognition

## `scale_duke_continuous()` {.smaller}

```{r}
#| label: continous
#| warning: false
#| include: false
scatterplot_c <- scatterplot +
  geom_point(aes(color = body_mass_g))
```

```{r}
#| label: fig-scale-cont
#| layout-ncol: 2
#| echo: true
#| fig-asp: 0.618
#| fig-align: "center"
#| fig-cap: "Plot comparison using continuous color scale"
#| cap-location: bottom
#| fig-subcap:
#|   - "Original"
#|   - "with scale_duke_continuous()"
#| warning: false
#| code-line-numbers: "4-6"
scatterplot_c +
  theme_duke()

scatterplot_c +
  theme_duke() +
  scale_duke_continuous()
```

## `scale_duke_*_discrete()` {.smaller}

-   Applies a Duke-specific discrete color scale for the `color` and `fill` aesthetics of ggplot geoms
-   Discrete plots must be able to delineate effectively between specific groups

```{r}
#| label: ccrs
#| warning: false
#| include: false
mat_melt <- readRDS("~/Desktop/dukethesis/data/mat_melt.rds.gzip")
colnames(mat_melt) <- c("Color 1", "Color 2", "CCR")
```

```{r}
#| label: tbl-ratios
#| echo: false
#| tbl-align: "center"
#| tbl-cap: "Highest color contrast ratios."
#| cap-location: bottom
#| warning: false
library(kableExtra)

mat_melt %>%
  arrange(desc(CCR)) %>%
  distinct(CCR, .keep_all = T) %>%
  slice(1:5) %>%
  kable()
```

## All pairings

```{r}
#| label: hmap
#| echo: false
#| fig-align: "center"
#| fig-asp: .618
#| warning: false

ggp <- ggplot(mat_melt, aes(`Color 1`, `Color 2`, fill = CCR)) +
  # Create heatmap with ggplot2
  geom_tile( # aes(fill = value)
  ) +
  labs(
    title = "Color-Contrast Ratios Between Color Pairings", x = "Color 1",
    y = "Color 2"
  ) +
  theme_duke() +
  scale_duke_continuous() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))

ggp
```

## Selected pairings

```{r}
#| label: hmap-final
#| echo: false
#| fig-asp: 0.618
#| fig-width: 6
#| warning: false

final_vals <- c("#012169", "#C84E00", "#00539B", "#339898", "#E89923", "#FFD960", "#A1B70D", "#262626")
final_names <- c("Duke Navy Blue", "Copper", "Duke Royal Blue", "Eno", "Persimmon", "Dandelion", "Piedmont", "Cast Iron")

final_melt <- mat_melt %>%
  dplyr::filter(`Color 1` %in% final_names & `Color 2` %in% final_names)

ggp_final <- ggplot(final_melt, aes(`Color 1`, `Color 2`, fill = CCR)) +
  # Create heatmap with ggplot2
  geom_tile( # aes(fill = value)
  ) +
  labs(
    title = "Color-Contrast Ratios Between Final Color Pairings", x = "Color 1",
    y = "Color 2"
  ) +
  theme_duke() +
  scale_duke_continuous() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))

ggp_final
```

## Discrete Palette

```{r}
#| label: palette
#| echo: false
#| fig-height: 2
#| fig-asp: .1

final_colors <- tibble(
  x = 1:length(final_vals),
  y = rep(1, length(final_vals)),
  hex = final_vals,
  name = final_names
)

ggplot(final_colors, aes(x = x, y = y)) +
  geom_tile(aes(fill = final_vals)) +
  scale_fill_identity() +
  geom_text(aes(label = str_wrap(name, 5)), color = "white", fontface = "bold", size = 3) +
  theme_void() +
  theme(plot.margin = unit(c(0, 0, 0, 0), "cm"))
```

-   14 of 28 color pairings are compliant with WCAG AA18 rating.
-   Color used for fill or color of geometric object, which offers complimentary features (ie. shape, larger areas, borders).
-   Best practice to use three to five colors from discrete scale [@wilke]

## `scale_duke_color_discrete()`

```{r}
#| label: discrete-color-plots
#| echo: false
#| warning: false
#| message: false
library(cowplot)

splot <- ggplot(penguins, aes(
  x = bill_length_mm, y = bill_depth_mm,
  color = species
)) +
  geom_point(size = 2) +
  labs(title = "Flipper Length v. Depth", x = "Bill Length (mm)", y = "Bill Depth (mm)")

##FIX THIS
comp <- readRDS("~/Desktop/dukethesis/data/deutan.rds.gzip")
```

```{r}
#| label: fig-discrete-color
#| fig-cap: "Sample scatter plot from different perspectives."
#| fig-asp: 0.618
#| fig-subcap: 
#|   - "Non-Deuteronamolous"
#|   - "Deuteronamolous"
#| layout-ncol: 2
#| echo: true
#| warning: false
#| message: false
#| code-line-numbers: "1-3"
splot +
  theme_duke() +
  scale_duke_color_discrete()
comp
```

## `scale_duke_fill_discrete()`

```{r}
#| label: discrete-fill-plots
#| echo: false
#| warning: false
#| message: false

bplot <-
  ggplot(penguins, aes(x = species, fill = species)) +
  geom_bar() +
  labs(
    title = "Distribution of Penguin Species",
    caption = "(Colors from left to right) \n Duke Royal Blue, Duke Navy Blue, Copper",
    x = "Species",
    y = "Count"
  )

bcomp <- readRDS("~/Desktop/dukethesis/data/deutan_fill.rds.gzip")
```

```{r}
#| label: fig-discrete-fill
#| fig-cap: "Sample bar plot from different perspectives."
#| fig-subcap: 
#|   - "Non-Deuteronamolous"
#|   - "Deuteronamolous"
#| fig-asp: 0.618
#| layout-ncol: 2
#| echo: true
#| warning: false
#| message: false
#| code-line-numbers: "1-3"
bplot +
  theme_duke() +
  scale_duke_fill_discrete()
bcomp
```

## Lessons Learned

::: v-center-container
1.  Package development is an **iterative** process, take your time.

2.  The **devtools** package is your best friend.

3.  Engage with existing resources online and **collaborate** with others.
:::

# Case Study

## Data

-   Sourced from the Office of the University Registrar
-   Data on all Duke courses between 2013-2022
    -   10 variables, 63,433 observations
-   Registrar supporting students, faculty and staff in enrollment, academic records, and course scheduling

## Number of Courses By Department

```{r}
#| warning: false
#| include: false

library(janitor)
library(readr)
registrar <- read_csv("~/Desktop/dukethesis/data/registrar.csv") |>
  clean_names() |>
  rename(acad_org = acad_org_proxy_for_department)
registrar <- registrar |>
  # create undergraduate course boolean
  mutate(Undergraduate = case_when(
    as.numeric(gsub("([0-9]+).*$", "\\1", catalog_number)) >= 500 | acad_org %in% c("FUQUA", "NURSING", "LAW") ~ FALSE,
    TRUE ~ TRUE
  ),
  # create course variable
  course = paste0(subject, catalog_number),
  course = str_remove(course, " "),
  seminar = if_else(str_detect(catalog_number, "S"), TRUE, FALSE)) |>
  # remove Abroad Classes
  filter(!endsWith(catalog_number, "A"))
```

```{r}
#| include: false
#| warning: false
library(colorblindr)
top_5 <- registrar |>
  filter(Undergraduate == TRUE) |>
  count(acad_org) |>
  top_n(5, n) |> 
  pull(acad_org)

dept_plot <- ggplot(registrar |>
         filter(acad_org %in% top_5), aes(acad_org, fill = acad_org)) +
  geom_bar() +
  labs(
    x = "Academic Organization", 
    y = "Count", 
    title = "Academic Organizations with Highest \nNumber of Undergraduate Courses",
    subtitle = "Between 2013 - 2022"
  ) +
  theme_duke() +
  scale_duke_fill_discrete()

dept_plot2 <- edit_colors(dept_plot, deutan, sev = 0.7)
dept_plot2 <- cowplot::plot_grid(dept_plot2, ncol = 1)
```

```{r}
#| layout-ncol: 2
#| echo: false
#| warning: false
#| message: false
#| fig-asp: .618
dept_plot
dept_plot2
```

With this information, the Registrar can better make decisions about the distribution of University resources and/or understand potential department popularity.

## Average Class Size

```{r}
#| include: false 
#| warning: false
high_enroll <- registrar |>
  filter(Undergraduate == TRUE) |>
  group_by(acad_org) |>
  summarise(acad_org, avg_cap = mean(enrollment_capacity), count = n()) |>
  ungroup(acad_org) |>
  distinct(acad_org, avg_cap, .keep_all = TRUE) |>
  filter(count > 50) |>
  top_n(5, avg_cap) |>
  pull(acad_org)

enroll_plot <- ggplot(
  registrar |> filter(acad_org %in% high_enroll), 
  aes(acad_org, enrollment_capacity, fill = acad_org)
  ) +
  geom_boxplot() +
  ylim(0, 150) +
  labs(
    x = "Academic Organization", 
    y = "Enrollment Capacity", 
    title = "Academic Organizations with Highest \nEnrollment Capacities",
    subtitle = "Between 2013-2022"
  ) +
  theme_duke() +
  scale_duke_fill_discrete()

enroll_plot2 <- edit_colors(enroll_plot, deutan, sev = 0.7)
enroll_plot2 <- cowplot::plot_grid(enroll_plot2, ncol = 1)
```

```{r}
#| layout-ncol: 2
#| echo: false
#| warning: false
#| message: false
#| fig-asp: .618
enroll_plot
enroll_plot2
```

Helpful resource for the Registrar to pinpoint departments that would benefit from reducing class size.

## Enrollment in Computer Science Courses

```{r}
#| include: false 
#| warning: false
library(patchwork)
hist1 <- registrar |>
  filter(acad_org == "COMP SCI") |>
  ggplot(aes(total_enrollment, fill = acad_org)) +
  geom_histogram() +
  labs(title = "COMPSCI Class Enrollment Does Not Meet Capacity", x = "Students Enrolled", y = "Count") +
  xlim(0, 150) + 
  theme_duke() +
  scale_duke_fill_discrete() +
  theme(legend.position = "none")

hist2 <- registrar |>
  filter(acad_org == "COMP SCI") |>
  ggplot(aes(enrollment_capacity, fill = acad_org)) +
  geom_histogram() +
  labs(x = "Enrollment Capacity", y = "Count") +
  xlim(0, 150) +
  theme_duke() +
  scale_duke_fill_discrete() +
  theme(legend.position = "none")
hist3 <- edit_colors(hist1, deutan, sev = 0.7)
hist4 <- edit_colors(hist2, deutan, sev = 0.7)
hist3 <- plot_grid(hist3)
hist4 <- plot_grid(hist4)
```

```{r}
#| layout-ncol: 2
#| echo: false
#| warning: false
#| message: false
#| fig-asp: .618
hist1 / hist2
hist3 / hist4
```

Visualizations suggest that students do not enroll at a high enough rate to fill Computer Science courses.

## Enrollment in Introductory Courses

```{r}
#| include: false 
#| warning: false
high_succ <- registrar |>
  filter(as.numeric(gsub("([0-9]+).*$", "\\1", catalog_number)) == 101) |>
  group_by(course) |>
  summarise(
    course, catalog_number, subject, class_descr, 
    Enroll_Succ = sum(total_enrollment)/sum(enrollment_capacity), 
    Avg_Size = mean(enrollment_capacity)
  ) |>
  distinct(course, .keep_all = TRUE) |>
  arrange(desc(Enroll_Succ)) |>
  ungroup(course) |>
  top_n(8, Enroll_Succ) |>
  ggplot(aes(course, y = Enroll_Succ, color = course)) +
  geom_point(size = 2) + 
  geom_text(aes(label= round(Enroll_Succ, 3)), nudge_x=.4, nudge_y=0, 
            size = 3, show.legend = FALSE) +
  geom_segment(aes(x= course, 
                   xend= course, 
                   y=0, 
                   yend=Enroll_Succ), linewidth = 2) +
  coord_flip() +
  labs(title = "Intro Courses with Highest\nEnrollment Success", x = "Course", y = "Enrollment Success") +
  theme_duke() +
  scale_duke_color_discrete()

high_succ2 <- edit_colors(high_succ, deutan, sev = 0.7)
high_succ2 <- cowplot::plot_grid(high_succ2, ncol = 1)
```

```{r}
#| layout-ncol: 2
#| echo: false
#| warning: false
#| message: false
#| fig-asp: .618
high_succ
high_succ2
```

May inform the Registrar's process of 1) adding sections to these courses and/or 2) identifying reasons for these courses' success.

## Seminar courses

```{r}
#| include: false 
#| warning: false
sem_rates <- registrar |>
  filter(Undergraduate == TRUE) |>
  group_by(acad_org) |>
  count(acad_org, seminar) |>
  filter(n > 50) |>
  summarise(acad_org, seminar, Count = n, Total = sum(n)) |>
  filter(seminar == TRUE, acad_org != "FOCUS") |>
  summarise(acad_org, Rate = Count / Total) |>
  top_n(5, Rate) |>
  pull(acad_org)

sem_plot <- ggplot(registrar |>
  filter(acad_org %in% sem_rates), aes(x = acad_org, fill = seminar)) +
  geom_bar(position = "fill") +
  labs(
    title = "Academic Organizations with\nHighest Seminar Rates",
    x = "Academic Organization",
    y = "Proportion",
    subtitle = "Between 2013-2022"
  ) +
  theme_duke() +
  scale_duke_fill_discrete()
sem_plot2 <- edit_colors(sem_plot, deutan, sev = 0.7)
sem_plot2 <- cowplot::plot_grid(sem_plot2, ncol = 1)
```

```{r}
#| layout-ncol: 2
#| echo: false
#| warning: false
#| message: false
#| fig-asp: .618
sem_plot
sem_plot2
```

If the University aims to improve their overall seminar offerings, it is important that they identify departments with lowest proportions.

# Colorblind Accessibility Best Practices

## 1. Keep It Simple

::: v-center-container
-   Reduce the complexity of visualization
    -   *What do I need to highlight in the data?*
    -   *What are the primary insights readers should understand?*
-   Limit the number of variable categories (ideally 3-5)
-   Consolidate data groups insignificant to your goal into single category to eliminate the need for excess colors.
:::

## 2. De-Emphasize the Need for Color

<br><br> - "Get it right in black and white" [@muth2020]

\- Use labels, arrows, shapes, annotations to differentiate between categories

```{r}
#| label: best-practices
#| include: false
#| warning: false
#| message: false
shape_plot <- ggplot(
  penguins,
  aes(x = bill_length_mm, y = bill_depth_mm)
) +
  geom_point(aes(color = species, shape = species)) +
  labs(
    title = "Bill Length vs. Bill Depth",
    x = "Bill Length (mm)", y = "Bill Depth (mm)"
  ) +
  theme_duke() +
  scale_duke_color_discrete()

lineplot <- penguins %>%
  filter(!is.na(bill_length_mm)) %>%
  group_by(island, year) %>%
  summarize(island, year, mean = mean(bill_length_mm)) %>%
  distinct(island, year, .keep_all = T) %>%
  ggplot(aes(x = as.factor(year), y = mean, color = island, group = island)) +
           geom_point(aes(shape = island), size = 2) +
           geom_line(aes(linetype = island), linewidth = 1.5) +
  labs(title = "Average Island Bill Length (mm) Per Year", x = "Year", y = "Bill Length (mm)") +
  theme_duke() +
  scale_duke_color_discrete()
```

## Scatterplot using shape

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig-asp: .618
shape_plot
```

## Line plot using different linetypes

```{r}
#| echo: false
#| warning: false
#| message: false
lineplot
```

## Bar plot with fill texture

![](images/fillbar_2.png){fig-align="center"}

## 3. Adjust When Necessary

::: v-center-container
-   Adapt the features of **duke** to meet audience needs
-   Specify larger text for visually impaired and/or older audiences
-   Rule of light vs. dark in accessibility (i.e. monochromatic palettes)
:::

## Limitations + Future Work

::: v-center-container
-   Duke brand specifies finite suite of colors
-   Specification of Atkinson-Hyperlegible font by default reliably working across all platforms
-   Additional color scales: ordinal, diverging, etc.
:::

# Summary

## **duke** package

::: v-center-container
-   Implements **minimalist** thematic design
-   High contrast color palette in both **continuous** and **discrete** geometric objects
-   Effective tool for promoting **accessibility** and **inclusivity** in Duke data visualization
-   Best used **in tandem** with other accessibility practices
:::

## Thank You & Questions {.center}

## References
