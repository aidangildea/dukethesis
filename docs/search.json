[
  {
    "objectID": "discussion.html#colorblind-accessibility-best-practices",
    "href": "discussion.html#colorblind-accessibility-best-practices",
    "title": "6  Discussion",
    "section": "6.1 Colorblind Accessibility Best Practices",
    "text": "6.1 Colorblind Accessibility Best Practices\nKeep It Simple\nThe duke package selects a simple thematic design as to not distract from the key takeaways of the data visualization. It is in this vein that you should constantly consider how you can more succinctly convey the insights from your data. While the duke discrete palette allows for up to eight distinct colors, you should always strive to minimize the number of dimensions in your plots. Reducing the number of categories present in your visualizations is not only a best practice for colorblind accessibility. It also allows all users to more effectively differentiate between distinctions in the data and quickly comprehend the primary takeaways.\nTo reduce plot complexity, ask questions like: What do I need to highlight in the data? What are the primary insights readers should understand? This thought process will reveal what characteristics and/or categories must stand out and allow you to direct your attention on making them clear - especially for colorblind readers. Inversely, you can identify data groups that are insignificant to your goal and combine them into a single category, in turn, eliminating the need for excess colors. By keeping it simple in data visualization, you can be more confident that your audience will both comprehend and appreciate the story of your data visualization.\nDe-Emphasize the Need for Color\nThe duke package allows users to integrate a more colorblind friendly palette into their visualizations; however, this is not the end-all solution. There are several other plot features present in ggplot that alleviate the need for the color palette to be perfectly distinguishable - or in some cases - be used at all. Essentially, if you “get it right in black and white”, you no longer have to worry about access issues for colorblind readers (Muth 2020). This can be done by adding, “icons, directional arrows, labels, annotations, or other indicators” that differentiate between different categories (Shaffer 2020).\nHere are a few examples of how these supplementary features can improve the accessibility of visualizations using the duke package.\nScatterplots can quickly become difficult to read when there a several distinct categories in the data. To improve your plot’s readability, consider adding shapes to your data points.\n\n\n\n\n\nFigure 6.1: Scatter plot with shape distinctions.\n\n\n\n\nFor geometric objects with large fill spaces (ie. bar plot, pie chart), the use of the colorblind friendly palettes can be effective on its own. Nevertheless, adding fill textures to your visualization is an effective way to increase plot clarity. To do so, I used the ggpattern package.\n\n\n\nFigure 6.2: Bar plot with fill texture\n\n\nFinally, the efficacy of color in line plots deteriorates as the number of categories increases and/or the lines are intersecting. By varying the patterns and widths of the lines in your plot, your visualization can more effectively convey trend differences.\n\n\n\n\n\nFigure 6.3: Line plot with line pattern and point shapes.\n\n\n\n\nThe use of these complimentary features - among many others - are easy and effective. By integrating them alongside the duke package, you can promote accessibility for not only colorblind individuals, but older readers, audiences with lower technical exposure, and people reading in low light.\nAdjust When Necessary\nThe colorblind community is not a monolith, therefore, it is understandable that you may need to adjust your visualizations given the context. The development of the duke package was intended to promote accessibility for the largest possible audience, which is why red-green colorblindness was the primary focus. Some features of duke may not be fitting for you, so adapt them when necessary. For example, text sizing is scaled relative to the plot dimensions in theme_duke(), but it is reasonable that even larger text may be required for audience readability. In this case, engage with the specifications of the theme() function to make sure the text is sufficiently large.\nThe duke palette offers the most accessible colors within Duke’s official branding guide, but modifying these colors may be needed to perfectly meet WCAG guidelines. If your visualization does not fall within the purview of the Duke official brand, using the the rule light vs. dark can be an effective strategy. Even when colors are similar, readers can typically distinguish between lighter and darker shades. This also to applies the monochromatic palettes which only use different shades of the same color. The Duke brand does not permit color adjustments and therefore the duke package cannot manually incorporate the light vs. dark strategy. However, if colorblind accessibility is your primary emphasis over representing Duke, this can be a successful tool for creating intelligible visualizations."
  },
  {
    "objectID": "discussion.html#summary",
    "href": "discussion.html#summary",
    "title": "6  Discussion",
    "section": "6.2 Summary",
    "text": "6.2 Summary\nduke empowers users to develop Duke branded and colorblind friendly visualizations and should be used in University communications. By implementing a minimalist thematic design and a high contrast color palette in both continuous and discrete geometric objects, the package is an efficacious tool for data visualization in the Duke community. Nevertheless, it is not the only tool. To further enhance the accessibility of visualizations, users can engage with several complimentary strategies:\nKeep It Simple: Identify the most important features of your data and remove those that are unnecessary. Reducing the complexity of the plot will more succinctly convey your data insights.\nDe-Emphasize Color: Integrate additional indicators into your visualizations (labels, shapes, patterns) to clearly direct the attention of readers. When used effectively, these features can eliminate the need for color differentiation at all.\nAdjust When Necessary: Be creative and craft a unique visualization fitting to your needs. By manually adjusting text sizing and color shades, you can ensure the visualization is appropriate for your audience.\nThe use of the duke package, in tandem with these best practices, will foster a more accessible and inclusive approach to data visualization in the Duke community.\n\n\n\n\nMuth, Lisa Charlotte. 2020. “What to Consider When Visualizing Data for Colorblind Readers - Datawrapper Blog.” https://blog.datawrapper.de/colorblindness-part2/.\n\n\nShaffer, Jeffrey. 2020. “5 Tips on Designing Colorblind-Friendly Visualizations.” https://www.tableau.com/blog/examining-data-viz-rules-dont-use-red-green-together."
  },
  {
    "objectID": "intro.html#motivation",
    "href": "intro.html#motivation",
    "title": "1  Introduction",
    "section": "1.1 Motivation",
    "text": "1.1 Motivation\nMy interest in writing an undergraduate thesis is centered on two goals: 1) identifying a material issue and 2) addressing it with a tangible solution. R packages tailored towards organization or company branding are quite common. The ggtech package allows users to incorporate colors representative of the Airbnb, Facebook, and Google brands, among many others, in their visualizations. Users can also transform their visualizations to have aesthetic features aligned with The Economist and The Wall Street Journal brands via the ggthemes package. These are just a couple of examples of how an R package can auto-theme ggplot visualizations to meet the branding requirements of a company. Only requiring a few functions, brand styling functions are easy-to-use yet very effective, making it an advantageous resource for companies to promote their brand.\nWith over 17,000 students, 38,000 employees, $1 billion annually in research expenditures, and six campuses, Duke University’s identity literally spans the globe (Duke Research & Innovation, n.d.). And still, there exists no package to automate the process of making ggplot visualizations representative of the Duke brand. It is an important need that has yet to be met and can only be in addressed via package development. By learning the skill of package development to create a new Duke branding package, duke, I successfully meet my thesis criterion of 1) identifying a significant issue and 2) solving it with a real solution.\nTo best represent and communicate the Duke brand; however, the duke package must cater to the largest possible audience. Thus, this project also centers on an important consideration in data visualization and branding package development: colorblind accessibility. As our use of data increasingly permeates all aspects of society, it is crucial that we integrate accessibility and inclusivity into our data visualization best practices. We must continuously consider questions like: Who is our audience? How can we make our visualizations more intelligible? Who might we be leaving behind? This thesis aims to empower users right here in the Duke community to more easily answer these questions. By developing an R package that allows for the creation of Duke official visualizations in a colorblind friendly way, we can begin to make accessibility a core tenet of data visualization."
  },
  {
    "objectID": "intro.html#background",
    "href": "intro.html#background",
    "title": "1  Introduction",
    "section": "1.2 Background",
    "text": "1.2 Background\nThere are approximately 300 million color blind people across the globe (“About Colour Blindness,” n.d.a). Approximately 1 in 12 men (8%) and 1 in 200 women (0.5%) are affected (“About Colour Blindness,” n.d.b). More properly known as Color Vision Deficiency, or CVD, the condition is primarily inherited genetically but can also be acquired due to other chronic conditions such as diabetes. With the data visualization industry expected to nearly double by 2026, its application will further become a mainstay in fields like marketing, research, public health, and journalism (Vissichelli 2022). More people will be interacting with data visualization than ever before – both on the creator and reader ends – therefore, it is crucial that it is increasingly accessible to those with CVD.\nR packages that implement color blind friendly palettes already exist, but this project is unique in its aim to construct a package that makes Duke’s color palette more accessible. Duke provides a detailed description of its official color suite and stresses its commitment to meeting the Web Content Accessibility Guidelines (WCAG). The WCAG are globally recognized as the standard for web accessibility best practices in all fields (Initiative, n.d.). Duke details which color combinations from their suite are compliant, but does not offer a simple way to integrate the information into data visualizations.\nThe duke package intends to fill this need. For Duke community members, the package will allow for easy integration of key aesthetic and geometric features that will make their visualizations clean, Duke branded, and accessible. Given that the Statistics curriculum at Duke primarily uses ggplot2 for visualization, duke will be focused on being compatible with its functionality. By establishing a package that allows users to easily integrate Duke’s style guide with color blind friendly adjustments, we can improve the accessibility of Duke related visualizations. The implementation of this package will be an effective step toward accessibility in the Duke community, and hopefully, will prompt future work on making data visualization more inclusive.\n\n\n\n\n“About Colour Blindness.” n.d.a. https://www.colourblindawareness.org/colour-blindness/.\n\n\n———. n.d.b. https://www.colourblindawareness.org/colour-blindness/.\n\n\nDuke Research & Innovation. n.d. “Annual Report 2122.” https://report.research.duke.edu/.\n\n\nInitiative, W3C Web Accessibility. n.d. “WCAG 2 Overview.” https://www.w3.org/WAI/standards-guidelines/wcag/.\n\n\nVissichelli, Lisa. 2022. “Blooming Bar Charts: The Growth of the Data Visualization Industry.” https://uxdesign.cc/blooming-bar-charts-the-growth-of-the-data-visualization-industry-5095c59a17fb."
  },
  {
    "objectID": "methods.html#color-sources",
    "href": "methods.html#color-sources",
    "title": "2  Methods",
    "section": "2.1 Color Sources",
    "text": "2.1 Color Sources\nThe office of University Communications provides an official color guide for the Duke brand. The color palette is intended to both bolster the brand of the University, as well as ensure cohesion among all official content (“Colors,” n.d.a). The primary colors of the official palette are Duke Royal Blue and Duke Navy Blue. It is highly encouraged that one of these colors is present in any Duke official project, as they are reflective of the Duke brand. The color guide also details an extended palette, which includes an additional 18 secondary and tertiary colors. Colors such as Copper, Eno, Ironweed, Persimmon, and Cast Iron are in the extended palette. University Communications urges the use of this extended palette for, “graphic accents, typography, backgrounds, [and] call-to-action buttons” (“Colors,” n.d.b). For each color in the palette, users can access the following information:\n\nColor Name\nPantone Matching System (PMS)\nHex Code (HEX)\nCyan, Magenta, Yellow, and Key (CMYK) Color Model\nRed, Green, Blue Color Model\n\nWe will primarily interact with the Hex codes for these colors in this project, shown in Table 2.1. Hex codes are a hexidecimal (base 16 numbering system) format for representing the amount of RBG in a particular shade (Rouse 2021). Additionally, Hex codes are recognized as the best color system for HTML and CSS formats; therefore, their use will be advantageous for data visualization in publication and web browser contexts.\n\n\nTable 2.1: Duke Color Palette\n\n\nName\nHex Code\n\n\n\n\nDuke Royal Blue\n#00539B\n\n\nDuke Navy Blue\n#012169\n\n\nCopper\n#C84E00\n\n\nPersimmon\n#E89923\n\n\nDandelion\n#FFD960\n\n\nPiedmont\n#A1B70D\n\n\nEno\n#339898\n\n\nMagnolia\n#1D6363\n\n\nPrussian Blue\n#005587\n\n\nShale Blue\n#0577B1\n\n\nIronweed\n#993399\n\n\nHatteras\n#E2E6ED\n\n\nWhisper Gray\n#F3F2F1\n\n\nGinger Beer\n#FCF7E5\n\n\nDogwood\n#988675\n\n\nShackleford\n#DAD0C6\n\n\nCast Iron\n#262626\n\n\nGraphite\n#666666\n\n\nGranite\n#B5B5B5\n\n\nLimestone\n#E5E5E5\n\n\n\n\nIn 2018, Duke added a color accessibility guide to their branding site outlining how users could meet the Web Content Accessibility Guidelines (WCAG) 2.0 AA guidelines. The WCAG are internationally recognized standards on how to make web content more accessible to people with disabilities - including those with color vision deficiency. Their accessibility standards are principled on four tenets: Perceivable, Operable, Understandable, and Robust (“Introduction to Understanding WCAG 2.0 | Understanding WCAG 2.0,” n.d.). Duke’s accessibility guide illustrates a grid of every text-background color pairing in their palette and their respective compliance to the WCAG. There are four compliance categories specified:\n\nAAA: highest compliance, text-background contrast ratio of 7+\nAA: mid-range compliance, text-background contrast ratio of 4.5+\nAA18: mid-range compliance with large text only (18pt or 14pt bold), text-background contrast ratio of 3+\nDNP: does not pass compliance guidelines, text-background contrast ratio of less than 3\n\nThese compliance metrics will be an important resource for identifying color combinations that are accessible and selecting them for use in the duke package. The ratios provided by this guideline are intended for background and foreground combinations; however, they also apply to colors near and/or adjacent to one another. Duke’s inclusion of WCAG compliance information on their branding website is an important step towards accessibility in University content, but it would benefit from a built-in functionality that allows users to interact with it more easily. By incorporating these recommendations into the duke package, this project aims to empower users to more deftly create accessible Duke data visualizations."
  },
  {
    "objectID": "methods.html#color-metrics",
    "href": "methods.html#color-metrics",
    "title": "2  Methods",
    "section": "2.2 Color Metrics",
    "text": "2.2 Color Metrics\nIn selecting the optimal color palette, several color difference metrics were considered. Euclidean distance is a commonly used measure that calculates the difference in the RGB coordinates of two colors:\n\n\\({\\displaystyle {\\text{distance}_e}={\\sqrt {(R_{2}-R_{1})^{2}+(G_{2}-G_{1})^{2}+(B_{2}-B_{1})^{2}}}.}\\)\n\n(Iyer 2020)\nHowever, Euclidean distance can be a flawed metric because the standard RGB (sRGB) color space is not perceptually uniform. This is because of irregularity in the sRGB color space, which causes evenly spaced hues to range in their perceptual similarity or difference (Madsen, n.d.a). In turn, color pairings that appear similar can have a greater Euclidean distance than those that appear different (Madsen, n.d.b). The CIE chromaticity diagram (see Figure 2.1) exhibits the color spectrum according to human vision. Its parabolic nature leads to irregularities in linearly scaled color scales (i.e., sRGB) and therefore weakens its efficacy in this context. \n\n\n\nFigure 2.1: CIE chromaticity diagram.\n\n\nTo accommodate these irregularities and center our color selection on human perception, we use the color contrast ratio as our primary metric. Color contrast is computed using “relative luminance” (“How to Calculate Colour Contrast” 2019). According to WCAG, relative luminance is the “relative brightness of any point in a color space, normalized to 0 for darkest black and 1 for lightest white” (“Web Content Accessibility Guidelines (WCAG) 2.0,” n.d.a). The formula for the color contrast ratio is as follows:\n\\[\\frac{(L1 + 0.05)} {(L2 + 0.05)}\\]\nBy dividing the the relative luminance of the lighter color (L1) by that of the darker color (L2), the color contrast ratio can range from a value of 1 (no contrast) to 21 (highest contrast) (“Web Content Accessibility Guidelines (WCAG) 2.0,” n.d.b). In line with the WCAG guidelines, we plan on only including color pairings in the package that meet a compliance level of AA18 or better.\nIt must be noted that given a total of 22 colors in the Duke official suite, our definition of the “optimal” palette may not be fully reliant on the color contrast ratio. The package is, at its core, representative of the Duke brand and should meet certain aesthetic expectations for those with and without color vision deficiency. The development of our color scales, specifically, incorporates a somewhat ad-hoc approach in order to strike a balance between accessibility and recognition of the Duke brand. In finding a color palette successful on both fronts, users can be confident that they are producing visualizations that are identifiably Duke-branded and accessible to a greater audience."
  },
  {
    "objectID": "methods.html#package-development",
    "href": "methods.html#package-development",
    "title": "2  Methods",
    "section": "2.3 Package Development",
    "text": "2.3 Package Development\nAs previously mentioned, package development posed a new challenge to the skill set I had learned through the Statistics curriculum. The R Packages (2e) text book served as an essential guide for learning, understanding, and eventually building the duke package. By clearly outlining the key structures of an R package, the functionality of the devtools package, and the importance of testing, I was well equipped to create duke.\nThe duke package offers four functions for users to make Duke branded visualizations in a colorblind friendly way.\n\n2.3.1 theme_duke()\nThis function is largely inspired by the theme() function and its many derivatives. Its primary focus is to set the aesthetic elements for the visualization’s background and accessory features. These include the background color, grid lines, axis ticks, plot text, etc. With accessibility at the forefront of this project’s goals, it is essential that these choices lead to not only a visually pleasing result, but to one that is comprehensible as well. To do so, theme_duke() implements a minimalist design with a White background and grid lines removed. This decision reduces excessive noise in the plot, and instead allows audiences to focus on the story the data tells.\nThis design is complemented by deliberate text specifications that ensure plot readability. The function applies uniform coloring for text across the entirety of the visualization. All possible text features of a ggplot (title, axes, caption, legend, etc.) are in in Duke Navy Blue because of its strong contrast to the White background. It has a contrast ratio of 14.76 with White, which is the third highest among all colors in the Duke extended palette. Sizing of major text elements is also handled carefully to promote legibility. Readers with color vision impairment and/or low vision benefit from larger text settings (UNC School of Medicine, n.d.). Rather than manually increasing text size, theme_duke() encodes text sizing relative to the scale of the visualization. In turn, text adjusts according to users’ manipulations of plot dimensions, guaranteeing that text is both appropriately large and adequately fit to the visualization.\nIn addition, theme_duke() allows for the simple integration of specific fonts in visualizations. We recommend that all text is in Atkinson-Hyperlegible font. Named after the founder of the Braille Institute, J. Robert Atkinson, the font uses “unambiguous, distinctive elements” to improve readability for individuals with vision impairment (“Atkinson Hyperlegible,” n.d.). Its use - both in the package and all complimentary documentation - is essential to promoting vision accessibility. Font implementation was one of the most difficult challenges throughout the package development process. R provides a limited suite of fonts, requiring users to download and load additional font families to their own system. On the individual-level, this is not too difficult. However, the process necessitates careful thought when building a package for community use. How can users integrate quickly access the package’s required fonts? What font implementation will require minimal memory? Why is being transparent with users important? We must closely consider these questions, among others, when adding font specification to duke.\nThe ongoing aim of this theme function is to implement Atkinson-Hyperlegible font by default across all text features of visualizations. This requires that users have the necessary font files locally installed to their systems. If already available locally, we imagine theme_duke() automatically using Atkinson-Hyperlegible font. If not, a message would be printed directing users to where the font files can downloaded and fonts used in plots would default to the ggplot2 default font, sans. We have constructed a single-use function that downloads the necessary Atkinson-Hyperlegible files to be used in that instance. This solution has not been added yet because it is not stable across all user systems. There are a few minor bugs in the systemfonts package that have roadblocked our development process and must be addressed first before we can finish this solution.\nIn the mean time, we recommend that users download Atkinson-Hyperlegible and then specify its use in the base family argument of theme_duke(). This is not a fully streamlined fix, yet it ensures that users on all systems can implement duke without encountering errors. If font in not specified, the function uses sans font. The application of Atkinson Hyperlegible font is key to improving accessibility in data visualization and is of high priority in duke’s ongoing development.\n\n\n2.3.2 scale_duke_continuous()\nThis function integrates Duke’s official color palette into geometric objects (geom) that use a continuous scale. Examples of commonly used plots implementing continuous geom objects include scatter plots, heat maps, and jitter plots. The primary challenge of adopting a continuous color scale in a color blind friendly way is the lack of color distinction that naturally occurs. Continuous color scales are defined by a low and high end of a two color gradient, where the data assumes colors within this range based on its respective value. However, continuous plots do not need complete distinction to be successful. It is often most important that readers can identify overall trends in continuous plots.\nTo optimize scale_duke_continuous() for users with impaired color vision, the continuous gradient must sequence from a dark to a light color (C. Wilke, n.d.). This is crucial because the data will be plotted beginning on the darker end of the scale, which has a higher contrast with our White background. Therefore, our gradient scale defines its low end as Duke Royal Blue and its high end as Hatteras. Duke Royal Blue has a color contrast ratio of 7.75 with White, making it sufficiently distinguishable. This, in tandem with Duke’s recommendation to include Duke Royal or Navy Blue in all communications, makes it the ideal choice for the low end of the scale. Hatteras is a light grey with subtle violet undertones, making it a pleasing complement to Duke Royal Blue (“Hatteras Gray,” n.d.). It is not highly distinct from the White background, but this is typical for the light extreme of continuous scales.\n\n\n2.3.3 scale_duke_color_discrete() and scale_duke_fill_discrete()\nTo implement a discrete scale from Duke’s official color palette, users can add scale_duke_color_discrete() and scale_duke_fill_discrete() layers to their visualizations. These functions provide a discrete palette that can be used for the color and fill parameters of ggplot geometric objects. An appropriate discrete palette is essential to creating user-friendly visualizations because its colors indicate distinct categories that exist in the data. Whereas continuous plots typically exhibit overall trends, discrete plots must be able to delineate effectively between specific groups. A majority of geom objects can incorporate a discrete scale, including bar plots, histograms, and density plots.\nAs previously mentioned, this project observes color contrast ratio as the primary metric for determining colorblind friendly combinations. To identify visibly distinct colors for our discrete palette, we generate the contrast ratio between all pairing from the Duke color guide, with the addition of White since it is the background color. Figure 2.2 shows a heat map of color contrasts of all pairings. Lighter tiles in the heat map indicate pairings with higher contrast ratios, which are preferred.\n\n\n\n\n\nFigure 2.2: Heatmap of color contrast ratio between color pairings.\n\n\n\n\nThen, using these ratios, we craft a palette that promotes accessibility and the Duke aesthetic. A rule of thumb for discrete color scales is limiting to three to five colors. Additionally, once eight to ten categories or more are reached, matching colors to categories becomes too burdensome to be useful, even if the colors are distinguishable in principle (C. O. Wilke, n.d.). This lends to less busy plots that are more easily understandable. Thus, the goal of the our discrete palette is to carefully order colors so that those most used (those at beginning of palette) are most compliant. The result is the palette shown in Figure 2.3.\n\n\n\n\n\nFigure 2.3: Discrete palette. Colors (from left to right): Duke Navy Blue, Piedmont, Copper, Duke Royal Blue, Eno, Persimmon, Dandelion, Cast Iron.\n\n\n\n\nWhile not perfectly compliant with WCAG guidelines, the palette achieves our goal of optimizing colorblind accessibility and representing the Duke brand. As seen in Figure 2.4, a majority of our color pairings meet at minimum the AA18 rating, as indicated by lighter tiles.\n\n\n\n\n\nFigure 2.4: Heatmap of color contrast ratio between final color pairings.\n\n\n\n\nThe final palette includes the following colors: Duke Navy Blue, Piedmont, Copper, Duke Royal Blue, Eno, Persimmon, Dandelion and Cast Iron. Out the 28 distinct colors pairings that exist from this palette (excluding pairings of identical colors), 14 have a color contrast ratio of 3 or greater.This is compliant with WCAG’s AA18 rating, which specifies the use of larger text to be accessible. The colors from this palette will primarily be used to fill or color geometric objects in ggplot - rather than text - which offers complimentary features (ie. shape, larger areas, borders) that promote accessibility. Thus, we proceed under the assumption that an AA18 categorization is sufficient.\n\n\n\n\nTable 2.2:  Color Contrast Ratios \n \n  \n    Color 1 \n    Color 2 \n    Contrast Ratio \n  \n \n\n  \n    Dandelion \n    Cast Iron \n    11.059041 \n  \n  \n    Dandelion \n    Duke Navy Blue \n    10.785676 \n  \n  \n    Cast Iron \n    Piedmont \n    6.698114 \n  \n  \n    Duke Navy Blue \n    Piedmont \n    6.532546 \n  \n  \n    Cast Iron \n    Persimmon \n    6.494391 \n  \n  \n    Duke Navy Blue \n    Persimmon \n    6.333858 \n  \n  \n    Dandelion \n    Duke Royal Blue \n    5.661465 \n  \n  \n    Cast Iron \n    Eno \n    4.385449 \n  \n  \n    Duke Navy Blue \n    Eno \n    4.277046 \n  \n  \n    Piedmont \n    Duke Royal Blue \n    3.428972 \n  \n  \n    Dandelion \n    Copper \n    3.376002 \n  \n  \n    Persimmon \n    Duke Royal Blue \n    3.324680 \n  \n  \n    Cast Iron \n    Copper \n    3.275781 \n  \n  \n    Duke Navy Blue \n    Copper \n    3.194808 \n  \n  \n    Dandelion \n    Eno \n    2.521758 \n  \n  \n    Eno \n    Duke Royal Blue \n    2.245047 \n  \n  \n    Piedmont \n    Copper \n    2.044738 \n  \n  \n    Persimmon \n    Copper \n    1.982548 \n  \n  \n    Cast Iron \n    Duke Royal Blue \n    1.953388 \n  \n  \n    Duke Navy Blue \n    Duke Royal Blue \n    1.905103 \n  \n  \n    Dandelion \n    Persimmon \n    1.702860 \n  \n  \n    Copper \n    Duke Royal Blue \n    1.676973 \n  \n  \n    Dandelion \n    Piedmont \n    1.651068 \n  \n  \n    Piedmont \n    Eno \n    1.527350 \n  \n  \n    Persimmon \n    Eno \n    1.480895 \n  \n  \n    Copper \n    Eno \n    1.338749 \n  \n  \n    Persimmon \n    Piedmont \n    1.031369 \n  \n  \n    Cast Iron \n    Duke Navy Blue \n    1.025345 \n  \n\n\n\n\n\n\n To ensure that this palette is accessible, we use the colorblindr package to visualize sample plots from the perspective of individuals with different types of color vision deficiency. There are several categorizations of CVD, yet the most common is red-green color blindness. As the name suggests, it makes it difficult for individuals to distinguish between red and green. Among this population, approximately 62.5% are deuteranomalous - meaning they have green-weak vision that makes green appear more red (Woods 2021a). Protonopia and deuteranopia prevent individuals from distinguishing between red and green at all, yet are far less prevalent at only 12.5% of the red-green colorblind population each (Woods 2021b).\nRed-green color blindness is by far the most common type, accounting for approximately 99% of those with CVD. For the purpose of creating a feasible project scope, we focus primarily on accessibility for those with red-green colorblindness. Future work on this project - or one with a similar goal - should investigate the feasibility of visualization accessibility for those with blue - yellow color blindness, monochromacy, etc.\n\n\nNon-Deuteronamolous PerspectiveDeuteronamolous Perspective\n\n\n\n\n\n\n\nFigure 2.5: Sample scatter plot from non-deuteronamolous perspective.\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.6: Sample scatter plot from deuteranomalous perspective."
  },
  {
    "objectID": "methods.html#lessons-learned",
    "href": "methods.html#lessons-learned",
    "title": "2  Methods",
    "section": "2.4 Lessons Learned",
    "text": "2.4 Lessons Learned\nThe package development process can be daunting; I know it was for me. The excess of package dependencies, function documentation, and test scripts quickly becomes complex and overwhelming, making it all the more important to approach the process properly informed. Here are some lessons I learned throughout the process and takeaways for success in package development:\n1. Package development is an iterative process, take your time. It is crucial that you approach each step in building your package with care - even those that are mundane. I often found myself skipping ahead to more attractive tasks like constructing a new function, leaving tedious but important tasks like documentation behind. This typically resulted in errors when checking my package. And they were increasingly harder to address when time had passed since I last worked on it. The process is far smoother when you continuously check for issues and address them immediately, rather than put them on the back-burner. It will save you from wasted time and frustration, so make sure to lean into the iterative style of package development.\n2. The devtools package is your best friend. The devtools package is inherent to the package development process, but the way you use it can make all the difference. The R Package (2e) textbook was an integral resource for learning when and how to use the various functions of devtools. It details the order you should use its functions to load your package, create necessary documentation and vignettes, check for existing errors, and eventually build your package. While it may seem minor, memorize the shortcuts for the primary functions of devtools (load_all(), check(), document()). Over time, they will save you a significant amount of time and make your package development process more efficient.\n3. Engage with existing resources online and collaborate with others. A common misconception in building new packages is that it is an entirely individual undertaking. I identified colorblind accessibility in the Duke data visualization as a unique and necessary problem to address, in turn, inspiring the duke package. At first, I thought that this meant I would and should construct the package on my own. This could not be further from the truth. As a package intended to be integrated into ggplot2 visualizations, duke shares many of the same functionalities as those in theme() and scale(). These existing resources demonstrated how to create the general structures of my functions, which then I could adapt to implement Duke’s official palette, a minimalist background aesthetic, etc. The “worth” of your package is not defined by its lack in crossover with other packages existing; therefore, make sure to engage with the resources at your disposal. I recommend you explore existing packages on GitHub, troubleshoot package issues by asking questions in the Posit Community, and find answers to difficult questions already asked on StackOverflow.\n\n\n\n\n“Atkinson Hyperlegible.” n.d. https://fonts.google.com/specimen/Atkinson+Hyperlegible.\n\n\n“Colors.” n.d.a. https://brand.duke.edu/colors/.\n\n\n———. n.d.b. https://brand.duke.edu/colors/.\n\n\n“Hatteras Gray.” n.d. https://www.ppgpaints.com/color/color-families/neutrals/hatteras-gray.\n\n\n“How to Calculate Colour Contrast.” 2019. https://www.accessibility-developer-guide.com/knowledge/colours-and-contrast/how-to-calculate.\n\n\n“Introduction to Understanding WCAG 2.0 | Understanding WCAG 2.0.” n.d. https://www.w3.org/TR/UNDERSTANDING-WCAG20/intro.html#introduction-fourprincs-head.\n\n\nIyer, Luc. 2020. “Euclidian Distance in RGB Color / Luc Iyer | Observable.” https://observablehq.com/@luciyer/euclidian-distance-in-rgb-color-space.\n\n\nMadsen, Rune. n.d.a. “Perceptually Uniform Color Spaces - Programming Design Systems.” https://programmingdesignsystems.com/color/perceptually-uniform-color-spaces/.\n\n\n———. n.d.b. “Perceptually Uniform Color Spaces - Programming Design Systems.” https://programmingdesignsystems.com/color/perceptually-uniform-color-spaces/.\n\n\nRouse, Margaret. 2021. “Color Hex Code.” https://www.techopedia.com/definition/29788/color-hex-code.\n\n\nUNC School of Medicine. n.d. “Using Accessible Web Colors.” https://uncch.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=57624079-8af2-481d-be42-ace100e9b5ef.\n\n\n“Web Content Accessibility Guidelines (WCAG) 2.0.” n.d.a. https://www.w3.org/TR/WCAG20/#relativeluminancedef.\n\n\n———. n.d.b. https://www.w3.org/TR/WCAG20/#relativeluminancedef.\n\n\nWilke, Claus. n.d. “Fundamentals of Data Visualization.” https://clauswilke.com/dataviz/color-pitfalls.html.\n\n\nWilke, Claus O. n.d. Fundamentals of Data Visualization. https://clauswilke.com/dataviz/color-pitfalls.html.\n\n\nWoods, Rob. 2021a. “Types of Color Blindness.” https://www.allaboutvision.com/conditions/color-blindness/types-of-color-blindness/.\n\n\n———. 2021b. “Types of Color Blindness.” https://www.allaboutvision.com/conditions/color-blindness/types-of-color-blindness/."
  },
  {
    "objectID": "functions.html#theme_duke",
    "href": "functions.html#theme_duke",
    "title": "3  Function Descriptions",
    "section": "3.1 theme_duke()",
    "text": "3.1 theme_duke()\nImplements theme components.\nDefines the overall aesthetic and thematic features of the plot. This function specifies simple background, grid line, text, and legend arguments to create minimalist design. Its use is intended for ggplot objects. See https://aidangildea.github.io/duke/reference/theme_duke.html for more information and examples."
  },
  {
    "objectID": "functions.html#scale_duke_continuous",
    "href": "functions.html#scale_duke_continuous",
    "title": "3  Function Descriptions",
    "section": "3.2 scale_duke_continuous()",
    "text": "3.2 scale_duke_continuous()\nContinuous scale constructor.\nApplies a Duke branded and accessible continuous color scale to ggplot geometric objects. It is applicable for both fill and color arguments. Defines gradient scale from dark to light to improve visibility and contrast for readers. See https://aidangildea.github.io/duke/reference/scale_duke_continuous.html for more information and examples."
  },
  {
    "objectID": "functions.html#scale_duke_fill_discrete",
    "href": "functions.html#scale_duke_fill_discrete",
    "title": "3  Function Descriptions",
    "section": "3.3 scale_duke_fill_discrete()",
    "text": "3.3 scale_duke_fill_discrete()\nDiscrete scale constructor for fill argument.\nApplies a Duke branded and accessible discrete color palette to ggplot geometric objects using fill argument. It prioritizes high contrast colors aligned with Web Content Accessibility Guidelines (WCAG). See https://aidangildea.github.io/duke/reference/scale_duke_fill_discrete.html for more information and examples."
  },
  {
    "objectID": "functions.html#scale_duke_color_discrete",
    "href": "functions.html#scale_duke_color_discrete",
    "title": "3  Function Descriptions",
    "section": "3.4 scale_duke_color_discrete()",
    "text": "3.4 scale_duke_color_discrete()\nDiscrete scale constructor for color argument.\nApplies a Duke branded and accessible discrete color palette to ggplot geometric objects using color argument. It prioritizes high contrast colors aligned with Web Content Accessibility Guidelines (WCAG). See https://aidangildea.github.io/duke/reference/scale_duke_color_discrete.html for more information and examples."
  },
  {
    "objectID": "functions.html#duke_pal",
    "href": "functions.html#duke_pal",
    "title": "3  Function Descriptions",
    "section": "3.5 duke_pal()",
    "text": "3.5 duke_pal()\nDiscrete palette constructor.\nDefines 8-color palette to be used by discrete scale function. It is intended for internal package use and not to be directly called. See https://aidangildea.github.io/duke/reference/duke_pal.html for more information and examples."
  },
  {
    "objectID": "palmers.html#scatter-plot---continuous-color",
    "href": "palmers.html#scatter-plot---continuous-color",
    "title": "4  Package Use",
    "section": "4.1 Scatter Plot - Continuous Color",
    "text": "4.1 Scatter Plot - Continuous Color\n\nscatterplot_c <- ggplot(\n  penguins,\n  aes(x = bill_length_mm, y = bill_depth_mm)\n) +\n  geom_point(aes(color = body_mass_g)) +\n  labs(\n    title = \"Bill Length vs. Bill Depth\",\n    x = \"Bill Length (mm)\", y = \"Bill Depth (mm)\"\n  )\n\nscatterplot_c +\n  scale_duke_continuous() +\n  theme_duke()\n\n\n\nscatterplot_c +\n  geom_point(aes(shape = species)) +\n  scale_duke_continuous() +\n  theme_duke()"
  },
  {
    "objectID": "palmers.html#scatter-plot---discrete-color",
    "href": "palmers.html#scatter-plot---discrete-color",
    "title": "4  Package Use",
    "section": "4.2 Scatter Plot - Discrete Color",
    "text": "4.2 Scatter Plot - Discrete Color\n\nscatterplot_d <- ggplot(\n  penguins,\n  aes(x = bill_length_mm, y = bill_depth_mm, color = species)\n) +\n  geom_point(size = 3) +\n  labs(\n    title = \"Bill Length vs. Bill Depth\",\n    caption = \"(Colors used) \\n Duke Royal Blue, Eno, Copper\",\n    x = \"Bill Length (mm)\",\n    y = \"Bill Depth (mm)\"\n  )\n\nscatterplot_d +\n  theme_duke() +\n  scale_duke_color_discrete()\n\n\n\nscatterplot_d +\n  facet_wrap(~species) +\n  theme_duke() +\n  scale_duke_color_discrete()"
  },
  {
    "objectID": "palmers.html#bar-plot",
    "href": "palmers.html#bar-plot",
    "title": "4  Package Use",
    "section": "4.3 Bar Plot",
    "text": "4.3 Bar Plot\n\nbarplot <-\n  ggplot(penguins, aes(x = species, fill = species)) +\n  geom_bar() +\n  labs(\n    title = \"Distribution of Penguin Species\",\n    caption = \"(Colors from left to right) \\n Duke Royal Blue, Duke Navy Blue, Copper\",\n    x = \"Species\",\n    y = \"Count\"\n  )\n\nbarplot +\n  scale_duke_fill_discrete() +\n  theme_duke()\n\n\n\nm_penguins <- penguins %>%\n  dplyr::filter(sex == \"male\")\n\nbarplot2 <- ggplot(m_penguins, aes(x = sex, fill = sex)) +\n  geom_bar()\n\nbarplot2 +\n  scale_duke_fill_discrete() +\n  theme_duke()\n\n\n\n\n# 8-category plot\nbarplot8 <- ggplot(students, aes(x = grade, fill = grade)) +\n  geom_bar()\n\nbarplot8 +\n  scale_duke_fill_discrete() +\n  theme_duke()\n\n\n\n\n# 7-category plot\nbarplot7 <- students %>%\n  slice(-13) %>%\n  ggplot(aes(x = grade, fill = grade)) +\n  geom_bar() +\n  scale_duke_fill_discrete() +\n  theme_duke()\n\n# 6-category plot\nbarplot6 <- students %>%\n  slice(-c(9, 10, 13)) %>%\n  ggplot(aes(x = grade, fill = grade)) +\n  geom_bar() +\n  scale_duke_fill_discrete() +\n  theme_duke()\n\n# 5-category plot\nbarplot5 <- students %>%\n  slice(-c(9, 10, 13, 7, 18)) %>%\n  ggplot(aes(x = grade, fill = grade)) +\n  geom_bar() +\n  scale_duke_fill_discrete() +\n  theme_duke()\n\n# 4-category plot\nbarplot4 <- students %>%\n  slice(-c(9, 10, 13, 7, 18, 4, 8)) %>%\n  ggplot(aes(x = grade, fill = grade)) +\n  geom_bar() +\n  scale_duke_fill_discrete() +\n  theme_duke()"
  },
  {
    "objectID": "palmers.html#histogram",
    "href": "palmers.html#histogram",
    "title": "4  Package Use",
    "section": "4.4 Histogram",
    "text": "4.4 Histogram\n\nhistplot <- ggplot(penguins, aes(body_mass_g)) +\n  geom_histogram(aes(fill = species), alpha = 0.8) +\n  labs(title = \"Distribution of Penguin Body Mass\", \n       caption = \"(Colors used) \\n Duke Royal Blue, Duke Navy Blue, Copper\", \n       x = \"Body Mass (g)\", \n       y = \"Count\")\n\nhistplot +\n  scale_duke_fill_discrete() +\n  theme_duke()"
  },
  {
    "objectID": "palmers.html#box-plot",
    "href": "palmers.html#box-plot",
    "title": "4  Package Use",
    "section": "4.5 Box Plot",
    "text": "4.5 Box Plot\n\nboxplot <- ggplot(penguins, aes(sex, body_mass_g)) +\n  geom_boxplot() +\n  labs(\n    title = \"Comparison of Body Mass By Sex\", \n    x = \"Sex\", \n    y = \"Body Mass (g)\"\n  )\n\nboxplot +\n  theme_duke()"
  },
  {
    "objectID": "palmers.html#density-plot",
    "href": "palmers.html#density-plot",
    "title": "4  Package Use",
    "section": "4.6 Density Plot",
    "text": "4.6 Density Plot\n\ndensityplot <- ggplot(penguins, aes(bill_depth_mm)) +\n  geom_density(aes(fill = species)) +\n  labs(\n    title = \"Density of Penguin Bill Depth\",\n    x = \"Bill Depth (mm)\",\n    y = \"Densiy\"\n  )\n\ndensityplot +\n  scale_duke_fill_discrete() +\n  theme_duke()"
  },
  {
    "objectID": "palmers.html#jitter-plot---discrete-color",
    "href": "palmers.html#jitter-plot---discrete-color",
    "title": "4  Package Use",
    "section": "4.7 Jitter Plot - Discrete Color",
    "text": "4.7 Jitter Plot - Discrete Color\n\njitterplot_d <- ggplot(penguins, aes(as.factor(year), body_mass_g)) +\n  geom_jitter(aes(color = species)) +\n  labs(\n    title = \"Comparison of Body Mass By Year\", \n    x = \"Year\", \n    y = \"Body Mass (g)\"\n  )\n\njitterplot_d +\n  scale_duke_color_discrete() +\n  theme_duke()"
  },
  {
    "objectID": "palmers.html#jitter-plot---continuous-color",
    "href": "palmers.html#jitter-plot---continuous-color",
    "title": "4  Package Use",
    "section": "4.8 Jitter Plot - Continuous Color",
    "text": "4.8 Jitter Plot - Continuous Color\n\njitterplot_c <- ggplot(penguins, aes(as.factor(year), body_mass_g)) +\n  geom_jitter(aes(color = bill_length_mm)) +\n  labs(\n    title = \"Comparison of Body Mass By Year\", \n    x = \"Year\", \n    y = \"Body Mass (g)\"\n  )\n\njitterplot_c +\n  scale_duke_continuous() +\n  theme_duke()"
  },
  {
    "objectID": "palmers.html#mosaic-plot",
    "href": "palmers.html#mosaic-plot",
    "title": "4  Package Use",
    "section": "4.9 Mosaic Plot",
    "text": "4.9 Mosaic Plot\n\nmosaicplot <- ggplot(data = penguins) +\n  ggmosaic::geom_mosaic(aes(x = ggmosaic::product(sex, island), fill = sex)) +\n  labs(\n    title = \"Penguin Sex vs. Island\",\n    x = \"Island\",\n    y = \"Penguin Sex\",\n    caption = \"(Color from top to bottom) \\n Granite, Duke Navy Blue, Duke Royal Blue\"\n  )\n\nmosaicplot +\n  scale_duke_fill_discrete() +\n  theme_duke()"
  },
  {
    "objectID": "palmers.html#label-plot",
    "href": "palmers.html#label-plot",
    "title": "4  Package Use",
    "section": "4.10 Label Plot",
    "text": "4.10 Label Plot\n\nlabelplot <- ggplot(\n    penguins,\n    aes(bill_length_mm, bill_depth_mm,\n      fill = island\n    )\n  ) +\n  geom_label(aes(label = island)) +\n  labs(\n    title = \"Bill Length/Depth by Island\",\n    x = \"Bill Length (mm)\",\n    y = \"Bill Depth (mm)\"\n  )\n\nlabelplot +\n  scale_duke_fill_discrete() +\n  theme_duke()"
  },
  {
    "objectID": "palmers.html#quantile-plot",
    "href": "palmers.html#quantile-plot",
    "title": "4  Package Use",
    "section": "4.11 Quantile Plot",
    "text": "4.11 Quantile Plot\n\nquantileplot <-\n  ggplot(\n    penguins,\n    aes(bill_length_mm, bill_depth_mm, color = species)\n  ) +\n  geom_quantile() +\n  labs(title = \"Bill Length/Depth Quantiles\", \n                x = \"Bill Length (mm)\", \n                y = \"Bill Depth (mm)\")\n\nquantileplot +\n  scale_duke_color_discrete() +\n  theme_duke()"
  },
  {
    "objectID": "palmers.html#area-plot",
    "href": "palmers.html#area-plot",
    "title": "4  Package Use",
    "section": "4.12 Area Plot",
    "text": "4.12 Area Plot\n\nareaplot <- ggplot(penguins, aes(body_mass_g, fill = species)) +\n  geom_area(stat = \"bin\") +\n  labs(\n    title = \"Area of Body Mass Index\", \n    x = \"Body Mass (g)\"\n  )\n\nareaplot +\n  scale_duke_fill_discrete() +\n  theme_duke()"
  },
  {
    "objectID": "palmers.html#dot-plot",
    "href": "palmers.html#dot-plot",
    "title": "4  Package Use",
    "section": "4.13 Dot Plot",
    "text": "4.13 Dot Plot\n\ndotplot <- ggplot(penguins, aes(body_mass_g)) +\n  geom_dotplot(aes(fill = species)) +\n  labs(\n    title = \"Dotplot of Body Mass (g)\", \n    x = \"Body Mass (g)\"\n  )\n\ndotplot +\n  scale_duke_fill_discrete() +\n  theme_duke()"
  },
  {
    "objectID": "palmers.html#frequency-polynomial-plot",
    "href": "palmers.html#frequency-polynomial-plot",
    "title": "4  Package Use",
    "section": "4.14 Frequency Polynomial Plot",
    "text": "4.14 Frequency Polynomial Plot\n\nfreqplot <-\n  ggplot(penguins, aes(body_mass_g)) +\n  geom_freqpoly(aes(color = species)) +\n  labs(title = \"Frequency Polynomial Plot of Body Mass (g)\", \n                x = \"Body Mass (g)\")\n\nfreqplot +\n  scale_duke_color_discrete() +\n  theme_duke()"
  },
  {
    "objectID": "palmers.html#column-plot",
    "href": "palmers.html#column-plot",
    "title": "4  Package Use",
    "section": "4.15 Column Plot",
    "text": "4.15 Column Plot\n\ncolplot <- ggplot(penguins, aes(species, body_mass_g, color = species)) +\n  geom_col() +\n  labs(\n    title = \"Body Mass (g) By Species\", \n    x = \"Species\", \n    y = \"Body Mass (g)\"\n  )\n\ncolplot +\n  scale_duke_color_discrete() +\n  theme_duke()"
  },
  {
    "objectID": "palmers.html#violin-plot",
    "href": "palmers.html#violin-plot",
    "title": "4  Package Use",
    "section": "4.16 Violin Plot",
    "text": "4.16 Violin Plot\n\nviolinplot <- ggplot(penguins, aes(species, body_mass_g, fill = species)) +\n  geom_violin(scale = \"area\") +\n  labs(\n    title = \"Body Mass (g) By Species\", \n    x = \"Species\", \n    y = \"Body Mass (g)\"\n  )\n\nviolinplot +\n  scale_duke_fill_discrete() +\n  theme_duke()"
  },
  {
    "objectID": "palmers.html#count-plot",
    "href": "palmers.html#count-plot",
    "title": "4  Package Use",
    "section": "4.17 Count Plot",
    "text": "4.17 Count Plot\n\ncountplot <- ggplot(penguins, aes(species, island, color = species)) +\n  geom_count() +\n  labs(\n    title = \"Species Count by Island\",\n    x = \"Species\", \n    y = \"Island\"\n  )\n\ncountplot +\n  scale_duke_color_discrete() +\n  theme_duke()"
  },
  {
    "objectID": "palmers.html#step-plot",
    "href": "palmers.html#step-plot",
    "title": "4  Package Use",
    "section": "4.18 Step Plot",
    "text": "4.18 Step Plot\n\nstepplot <- ggplot(\n  penguins, \n  aes(as.factor(year), body_mass_g, color = species)\n  ) +\n  geom_step() +\n  labs(\n    itle = \"Body Mass (g) By Year\", \n    x = \"Year\", \n    y = \"Body Mass (g)\"\n  )\n\nstepplot +\n  scale_duke_color_discrete() +\n  theme_duke()\n\n\n\n\n\n\n\n\nHorst, Allison, Alison Hill, and Kristen Gorman. n.d. “Palmerpenguins r Data Package  Palmerpenguins.” https://allisonhorst.github.io/palmerpenguins/."
  },
  {
    "objectID": "analysis.html#introduction",
    "href": "analysis.html#introduction",
    "title": "5  Case Study",
    "section": "5.1 Introduction",
    "text": "5.1 Introduction\nThe duke package is intended to promote color blind accessibility in Duke official visualizations. This applied analysis aims to demonstrate how, when, and why the package may be used within the Duke community.\nThe data for this analysis is sourced from the Office of the University Registrar and details information about all Duke courses between 2013-2022. The data set has 10 variables and 63,433 observations, each of which is a unique class. Included in the data is information on the course department, subject, enrollment numbers, and room description. See Table 5.1 for a full data dictionary.\n\n\n\n\n\nTable 5.1: Registrar Data Dictionary\n\n\n\n\n\n\nVariable\nDescription\n\n\n\n\nacad_year\nAcademic year of the course.\n\n\nacad_org\nAcademic organization abbreviation of the course; proxy for department.\n\n\nclass_nbr\nUnique class number for the course.\n\n\nsubject\nSubject abbreviation for course.\n\n\ncatalog_number\nCourse number within academic organizations.\n\n\nclass_descr\nCourse name.\n\n\ntotal_enrollment\nNumber of students enrolled in course.\n\n\nenrollment_capacity\nEnrollment capacity for course.\n\n\nroom_capacity\nCapacity for students permitted in course room.\n\n\nroom_descr\nRoom where course is held."
  },
  {
    "objectID": "analysis.html#analysis",
    "href": "analysis.html#analysis",
    "title": "5  Case Study",
    "section": "5.2 Analysis",
    "text": "5.2 Analysis\nThe Duke Office of the University Registrar facilitates the academic processes of the University by supporting students, faculty and staff in enrollment, academic records, and course scheduling - among many other tasks. It is crucial that the Office continuously explores the academic data they collect to identify the most successful policies for Duke’s educational environment. Their work is critical to the function of the University, making it all the more important that they communicate with the Duke community in an accessible way. Thus, communications, reports, and announcements from the University Registrar offer a tangible use case for the duke package.\nThe following tabs allows users without color blindness to see duke from their perspective and from the perspective of those who are deuteronamolous. This allows for a better understanding of how the package improves accessibility in Duke data visualizations.\n\n\n\n\n5.2.1 Number of courses by department\nThe Registrar is interested in understanding the breadth of academic offerings available for students. As we can see in Figure 5.1 and Figure 5.2, the academic organizations (proxy for department) that have offered the largest number of undergraduate courses from 2013-2022 are the Asian and Middle Eastern Studies (AMES), Chemistry, Math, Public Policy (PPS), and Romance Studies departments. With this information, the Registrar can better make decisions about the distribution of University resources and/or understand potential department popularity.\n\n\n\n\n\nNon-Deuteronamolous PerspectiveDeuteronamolous Perspective\n\n\n\n\n\n\n\nFigure 5.1: Academic Organizations with Highest Number of Undergraduate Courses - Non-Deuteronamolous Perspective\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.2: Academic Organizations with Highest Number of Undergraduate Courses - Deuteronamolous Perspective”\n\n\n\n\n\n\n\n\n\n\n5.2.2 Average class size\nAverage class size is a staple concern of major universities, as prospective students and their families are attracted to small faculty to student ratios. In Figure 5.3 and Figure 5.4, we find that the Computer Science, Economics, Engineering, Environmental Sciences, and Earth and Ocean Sciences departments have the highest average undergraduate sciences. This is understandable given that they are majorly STEM departments, which tend to have more lecture-based courses. This visualization is a helpful resource for the Registrar to pinpoint departments that would benefit from reducing class size.\n\n\n\n\n\nNon-Deuteronamolous PerspectiveDeuteronamolous Perspective\n\n\n\n\n\n\n\nFigure 5.3: Academic Organizations with Highest Enrollment Capacities - Non-Deuteronamolous Perspective\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.4: Academic Organizations with Highest Enrollment Capacities - Deuteronamolous Perspective\n\n\n\n\n\n\n\n\n\n\n5.2.3 Enrollment in Computer Science courses\nNow that we have identified Computer Science as a department with larger class capacities, let’s see if there is enough student demand to fill them. Figure 5.5 and Figure 5.6 exhibits both the distribution of student enrollment in Computer Science course and of class capacities in the department. While they share a right skew, the center of student enrollment appears less than that of course capacity. The Registrar would certainly want to investigate the data further, but the visualization suggests that students do not enroll at a high enough rate to fill the courses.\n\n\n\n\n\nNon-Deuteronamolous PerspectiveDeuteronamolous Perspective\n\n\n\n\n\n\n\nFigure 5.5: COMPSCI Class Enrollment and Capacity Distributions - Non-Deuteronamolous Perspective\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.6: COMPSCI Class Enrollment and Capacity Distributions - Deuteronamolous Perspective\n\n\n\n\n\n\n\n\n\n\n5.2.4 Enrollment in introductory courses\nThe University often highlights their wide selection of introductory courses that allow new students to explore their interests. Figure 5.7 and Figure 5.8 explore the intro courses with the most successful enrollment rates. This is beneficial because it informs the Registrar’s process of 1) adding sections to these courses and/or 2) identifying reasons for these courses’ success and integrating them into others.\n\n\n\n\n\nNon-Deuteronamolous PerspectiveDeuteronamolous Perspective\n\n\n\n\n\n\n\nFigure 5.7: Intro Courses with Highest Enrollment Success - Non-Deuteronamolous Perspective\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.8: Intro Courses with Highest Enrollment Success - Deuteronamolous Perspective\n\n\n\n\n\n\n\n\nConversely, the Registrar may want to identify intro courses with lower enrollment rates so that they can 1) adjust their structure/implementation and/or 2) remove them from the course catalog. Figure 5.9 and Figure 5.10 visualize the eight intro courses with the least successful enrollment rates.\n\n\n\n\n\nNon-Deuteronamolous PerspectiveDeuteronamolous Perspective\n\n\n\n\n\n\n\nFigure 5.9: Intro Courses with Least Enrollment Success - Non-Deuteronamolous Perspective\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.10: Intro Courses with Least Enrollment Success - Deuteronamolous Perspective\n\n\n\n\n\n\n\n\n\n\n5.2.5 Seminar courses\nThe University is continuously interested in increasing the amount of face-to-face time students have with their professors. Seminar courses are a great course format for doing so. Figure 5.11 and Figure 5.12 demonstrate the five departments with the highest proportion of seminar courses in their catalog. If the Registrar wants to tout their seminar offerings, they can highlight the Documentary Studies, English, Gender, Sexuality Feminist Studies, Policy and Journalism, and Theater Studies departments.\n\n\n\n\n\nNon-Deuteronamolous PerspectiveDeuteronamolous Perspective\n\n\n\n\n\n\n\nFigure 5.11: Academic Organizations with Highest Seminar Rates - Non-Deuteronamolous Perspective\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.12: Academic Organizations with Highest Seminar Rates - Deuteronamolous Perspective\n\n\n\n\n\n\n\n\nOn the other hand, if the University aims to improve their overall seminar offerings, it is important that they identify departments with lowest proportions. The Registrar may be interested in adding additional seminar courses to the departments in Figure 5.13 and Figure 5.14.\n\n\n\n\n\nNon-Deuteronamolous PerspectiveDeuteronamolous Perspective\n\n\n\n\n\n\n\nFigure 5.13: Academic Organizations with Lowest Seminar Rates - Non-Deuteronamolous Perspective\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.14: Academic Organizations with Lowest Seminar Rates - Deuteronamolous Perspective\n\n\n\n\n\n\n\n\nThese data insights are critical for both the Registrar and members of the Duke community to make informed educational decisions. To ensure that those who are colorblind have the same level of access, the Registrar should use the duke package as part of their visualization best practices."
  },
  {
    "objectID": "analysis.html#acknowledgement",
    "href": "analysis.html#acknowledgement",
    "title": "5  Case Study",
    "section": "5.3 Acknowledgement",
    "text": "5.3 Acknowledgement\nA special thanks to Frank Blalark from the Office of the University Registrar for accommodating my request for Duke course data."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "“About Colour Blindness.” n.d.a. https://www.colourblindawareness.org/colour-blindness/.\n\n\n———. n.d.b. https://www.colourblindawareness.org/colour-blindness/.\n\n\n“Atkinson Hyperlegible.” n.d. https://fonts.google.com/specimen/Atkinson+Hyperlegible.\n\n\n“Colors.” n.d.a. https://brand.duke.edu/colors/.\n\n\n———. n.d.b. https://brand.duke.edu/colors/.\n\n\nDuke Research & Innovation. n.d. “Annual Report\n2122.” https://report.research.duke.edu/.\n\n\n“Hatteras Gray.” n.d. https://www.ppgpaints.com/color/color-families/neutrals/hatteras-gray.\n\n\nHorst, Allison, Alison Hill, and Kristen Gorman. n.d.\n“Palmerpenguins r Data Package \nPalmerpenguins.” https://allisonhorst.github.io/palmerpenguins/.\n\n\n“How to Calculate Colour Contrast.” 2019. https://www.accessibility-developer-guide.com/knowledge/colours-and-contrast/how-to-calculate.\n\n\nInitiative, W3C Web Accessibility. n.d. “WCAG 2 Overview.”\nhttps://www.w3.org/WAI/standards-guidelines/wcag/.\n\n\n“Introduction to Understanding WCAG 2.0 | Understanding WCAG\n2.0.” n.d. https://www.w3.org/TR/UNDERSTANDING-WCAG20/intro.html#introduction-fourprincs-head.\n\n\nIyer, Luc. 2020. “Euclidian Distance in RGB Color / Luc Iyer |\nObservable.” https://observablehq.com/@luciyer/euclidian-distance-in-rgb-color-space.\n\n\nMadsen, Rune. n.d.a. “Perceptually Uniform Color Spaces -\nProgramming Design Systems.” https://programmingdesignsystems.com/color/perceptually-uniform-color-spaces/.\n\n\n———. n.d.b. “Perceptually Uniform Color Spaces - Programming\nDesign Systems.” https://programmingdesignsystems.com/color/perceptually-uniform-color-spaces/.\n\n\nMuth, Lisa Charlotte. 2020. “What to Consider When Visualizing\nData for Colorblind Readers - Datawrapper Blog.” https://blog.datawrapper.de/colorblindness-part2/.\n\n\nRouse, Margaret. 2021. “Color Hex Code.” https://www.techopedia.com/definition/29788/color-hex-code.\n\n\nShaffer, Jeffrey. 2020. “5 Tips on Designing Colorblind-Friendly\nVisualizations.” https://www.tableau.com/blog/examining-data-viz-rules-dont-use-red-green-together.\n\n\nUNC School of Medicine. n.d. “Using Accessible Web Colors.”\nhttps://uncch.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=57624079-8af2-481d-be42-ace100e9b5ef.\n\n\nVissichelli, Lisa. 2022. “Blooming Bar Charts: The Growth of the\nData Visualization Industry.” https://uxdesign.cc/blooming-bar-charts-the-growth-of-the-data-visualization-industry-5095c59a17fb.\n\n\n“Web Content Accessibility Guidelines (WCAG) 2.0.” n.d.a.\nhttps://www.w3.org/TR/WCAG20/#relativeluminancedef.\n\n\n———. n.d.b. https://www.w3.org/TR/WCAG20/#relativeluminancedef.\n\n\nWilke, Claus. n.d. “Fundamentals of Data Visualization.” https://clauswilke.com/dataviz/color-pitfalls.html.\n\n\nWilke, Claus O. n.d. Fundamentals of Data Visualization. https://clauswilke.com/dataviz/color-pitfalls.html.\n\n\nWoods, Rob. 2021a. “Types of Color Blindness.” https://www.allaboutvision.com/conditions/color-blindness/types-of-color-blindness/.\n\n\n———. 2021b. “Types of Color Blindness.” https://www.allaboutvision.com/conditions/color-blindness/types-of-color-blindness/."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Promoting Accessibility in Duke Data Visualization",
    "section": "",
    "text": "Preface\nThis is the primary documentation or the Duke Statistical Science Thesis, “Promoting Accessibility in Duke Data Visualization: Creating a Color-Blind Friendly Duke Color Package.” It was developed and published in the Spring of 2023. A special thanks to my wonderful advisor, Dr. Mine Çetinkaya-Rundel, who carefully guided this project’s creation and ensured its success. An additional thank you to the members of my thesis committee, Dr. Colin Rundel and Dr. Merlise Clyde, for offering their extensive experience in statistical computing and R package development. I hope this thesis successfully details the motivation, process, and results of the duke package and how it can effectively empower users to create colorblind friendly Duke visualizations.\nFor questions and concerns, please reach out to me at aidan.gildea@duke.edu. In addition, I encourage you to post any Issues on the package Github repository."
  }
]